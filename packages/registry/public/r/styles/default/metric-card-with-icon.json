{
  "name": "metric-card-with-icon",
  "type": "registry:block",
  "version": "1.1.0",
  "private": true,
  "description": "A metric card that displays a KPI metric with a label, value, difference and icon.",
  "dependencies": [
    "@chakra-ui/react",
    "@chakra-ui/utils",
    "@saas-ui/react",
    "react-icons"
  ],
  "files": [
    {
      "path": "blocks/kpi-cards/metric-card-with-icon/metric-card-with-icon.tsx",
      "content": "import * as React from 'react'\n\nimport {\n  Box,\n  Card,\n  CardBody,\n  Flex,\n  HStack,\n  Icon,\n  Stat,\n  StatHelpText,\n  StatLabel,\n  StatNumber,\n} from '@chakra-ui/react'\nimport { IconBadge } from '@saas-ui/react'\nimport {\n  LuChevronDown,\n  LuChevronUp,\n  LuMousePointerClick,\n  LuUsers,\n  LuWallet,\n} from 'react-icons/lu'\n\nconst getIcon = (metric: string) => {\n  switch (metric) {\n    case 'active-users':\n      return <LuUsers />\n    case 'revenue':\n      return <LuWallet />\n    case 'avg-click-rate':\n      return <LuMousePointerClick />\n    default:\n      return null\n  }\n}\n\nexport interface MetricCardProps {\n  id: string\n  label: string\n  value: string\n  difference: string\n  isPositive: boolean\n}\n\nexport const MetricCard: React.FC<MetricCardProps> = (props) => {\n  const { id, label, value, difference, isPositive } = props\n  return (\n    <Card flex=\"1\">\n      <CardBody position=\"relative\">\n        <HStack spacing=\"3\">\n          <IconBadge size=\"xl\">{getIcon(id)}</IconBadge>\n          <Stat>\n            <StatLabel color=\"muted\">{label}</StatLabel>\n            <StatNumber display=\"inline-block\" me=\"2\">\n              {value}\n            </StatNumber>\n            <StatHelpText color=\"muted\" display=\"inline-block\">\n              {isPositive ? (\n                <Flex alignItems=\"center\">\n                  <Icon as={LuChevronUp} color=\"green.500\" />{' '}\n                  <Box as=\"span\" color=\"green.500\" fontWeight=\"medium\">\n                    {difference}\n                  </Box>\n                </Flex>\n              ) : (\n                <Flex alignItems=\"center\">\n                  <Icon as={LuChevronDown} color=\"red.500\" />{' '}\n                  <Box as=\"span\" color=\"red.500\" fontWeight=\"medium\">\n                    {difference}\n                  </Box>\n                </Flex>\n              )}\n            </StatHelpText>\n          </Stat>\n        </HStack>\n      </CardBody>\n    </Card>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/kpi-cards/metric-card-with-icon/metric-card-with-icon.stories.tsx",
      "content": "import * as React from 'react'\n\nimport { HStack } from '@chakra-ui/react'\nimport type { Meta } from '@storybook/react'\n\nimport { MetricCard } from './metric-card-with-icon.js'\n\nexport default {\n  title: 'Blocks/KPI Cards/MetricCardWithIcon',\n} as Meta\n\nconst metrics = [\n  {\n    id: 'active-users',\n    label: 'Active users',\n    value: '676',\n    difference: '12.4%',\n    isPositive: true,\n  },\n  {\n    id: 'revenue',\n    label: 'Revenue',\n    value: '$ 29,294',\n    difference: '21%',\n    isPositive: false,\n  },\n  {\n    id: 'avg-click-rate',\n    label: 'Avg. click rate',\n    value: '14%',\n    difference: '5%',\n    isPositive: true,\n  },\n]\n\nexport const Default = () => (\n  <HStack p=\"8\">\n    {metrics.map((metric) => (\n      <MetricCard key={metric.label} {...metric} />\n    ))}\n  </HStack>\n)\n",
      "type": "registry:story"
    }
  ],
  "canvas": {
    "center": true
  }
}