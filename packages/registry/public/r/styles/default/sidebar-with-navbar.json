{
  "name": "sidebar-with-navbar",
  "type": "registry:block",
  "version": "1.1.0",
  "private": false,
  "description": "Sidebar layout with navbar.",
  "dependencies": [
    "@chakra-ui/react",
    "@chakra-ui/utils",
    "@saas-ui/react",
    "react-icons"
  ],
  "files": [
    {
      "path": "blocks/sidebar-layouts/sidebar-with-navbar/sidebar-with-navbar.tsx",
      "content": "import * as React from 'react'\n\nimport {\n  AvatarGroup,\n  Badge,\n  Box,\n  Button,\n  HStack,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverHeader,\n  PopoverTrigger,\n  Text,\n  useBreakpointValue,\n} from '@chakra-ui/react'\nimport { Page, PageHeader } from '@saas-ui-pro/react'\nimport { SaasUIIcon } from '@saas-ui/assets'\nimport {\n  AppShell,\n  IconBadge,\n  NavGroup,\n  NavItem,\n  Navbar,\n  NavbarContent,\n  NavbarItem,\n  PersonaAvatar,\n  SearchInput,\n  Sidebar,\n  SidebarSection,\n  SidebarToggleButton,\n  StructuredList,\n  StructuredListCell,\n  StructuredListItem,\n} from '@saas-ui/react'\nimport {\n  LuBell,\n  LuChevronsUpDown,\n  LuContact,\n  LuHeartHandshake,\n  LuLightbulb,\n  LuListChecks,\n  LuPlus,\n  LuSettings,\n  LuUsers,\n} from 'react-icons/lu'\n\nconst tags = [\n  {\n    id: 'lead',\n    name: 'Lead',\n    count: 83,\n    color: 'purple.500',\n  },\n  {\n    id: 'customer',\n    name: 'Customer',\n    count: 210,\n    color: 'green.500',\n  },\n  {\n    id: 'partner',\n    name: 'Partner',\n    count: 12,\n    color: 'blue.500',\n  },\n  {\n    id: 'prospect',\n    name: 'Prospect',\n    count: 0,\n  },\n]\n\nconst OrganizationMenu = () => {\n  return (\n    <Menu>\n      <MenuButton\n        as={Button}\n        leftIcon={\n          <IconBadge\n            icon={<SaasUIIcon width=\"16px\" color=\"white\" />}\n            variant=\"solid\"\n            bg=\"black\"\n            boxSize=\"7\"\n          />\n        }\n        rightIcon={<LuChevronsUpDown size=\"1em\" />}\n        variant=\"ghost\"\n        textAlign=\"left\"\n        w=\"full\"\n        h=\"10\"\n        px=\"2\"\n      >\n        Acme Corp\n      </MenuButton>\n      <MenuList>\n        <MenuItem\n          icon={\n            <IconBadge\n              icon={<SaasUIIcon width=\"12px\" color=\"white\" />}\n              variant=\"solid\"\n              bg=\"black\"\n              boxSize=\"6\"\n            />\n          }\n        >\n          Acme Corp\n        </MenuItem>\n        <MenuDivider />\n        <MenuItem>Create workspace</MenuItem>\n      </MenuList>\n    </Menu>\n  )\n}\n\nexport const SidebarWithNavbar = (props: React.PropsWithChildren) => {\n  const isMobile = useBreakpointValue({ base: true, lg: false })\n\n  return (\n    <AppShell\n      variant=\"static\"\n      height=\"600px\"\n      bg=\"app-background\"\n      navbar={\n        <Navbar\n          borderBottomWidth=\"1px\"\n          justifyContent=\"start\"\n          alignItems=\"start\"\n        >\n          <NavbarContent as={Box} spacing=\"6\" ms={{ base: 10, lg: 0 }}>\n            {!isMobile && (\n              <NavbarItem width=\"254px\" ms=\"-3\">\n                <OrganizationMenu />\n              </NavbarItem>\n            )}\n            <NavbarItem flex=\"1\">\n              <SearchInput\n                size=\"sm\"\n                variant=\"plain\"\n                bg=\"gray.100\"\n                _dark={{ bg: 'whiteAlpha.100' }}\n              />\n            </NavbarItem>\n          </NavbarContent>\n          <NavbarContent\n            as=\"div\"\n            justifyContent=\"end\"\n            spacing={{ base: 1, lg: 3 }}\n          >\n            <NavbarItem>\n              <AvatarGroup size={{ base: 'xs', lg: 'sm' }} max={2}>\n                <PersonaAvatar src=\"/showcase-avatar.jpg\" name=\"Beatriz\" />\n                <PersonaAvatar name=\"Eelco\" />\n                <PersonaAvatar name=\"Tomasz\" />\n              </AvatarGroup>\n            </NavbarItem>\n            <NavbarItem>\n              <Popover>\n                <PopoverTrigger>\n                  <Button\n                    aria-label=\"Notifications\"\n                    variant=\"ghost\"\n                    rounded=\"full\"\n                    display=\"flex\"\n                    position=\"relative\"\n                    px=\"2\"\n                  >\n                    <LuBell size=\"1.2em\" />\n                    <Badge\n                      position=\"absolute\"\n                      top=\"4px\"\n                      right=\"4px\"\n                      bg=\"red.500\"\n                      borderRadius=\"full\"\n                      boxSize=\"2\"\n                    />\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent>\n                  <PopoverHeader display=\"flex\" alignItems=\"center\">\n                    <Text>Notifications</Text>\n                    <Button size=\"xs\" ml=\"auto\">\n                      Mark all read\n                    </Button>\n                  </PopoverHeader>\n                  <PopoverBody p=\"0\">\n                    <StructuredList>\n                      <StructuredListItem onClick={() => null}>\n                        <StructuredListCell width=\"6\">\n                          <Badge bg=\"red.500\" borderRadius=\"full\" boxSize=\"2\" />\n                        </StructuredListCell>\n                        <StructuredListCell flex=\"1\">\n                          <Text fontWeight=\"medium\" fontSize=\"md\">\n                            Email address is missing\n                          </Text>\n                          <HStack fontSize=\"xs\" justifyContent=\"space-between\">\n                            <Text color=\"muted\" noOfLines={1}>\n                              New comment from Eelco\n                            </Text>\n                            <Text color=\"muted\">2h ago</Text>\n                          </HStack>\n                        </StructuredListCell>\n                      </StructuredListItem>\n                      <StructuredListItem onClick={() => null}>\n                        <StructuredListCell width=\"6\"></StructuredListCell>\n                        <StructuredListCell flex=\"1\">\n                          <Text fontSize=\"md\">Close deal with OpenAi</Text>\n                          <HStack fontSize=\"xs\" justifyContent=\"space-between\">\n                            <Text color=\"muted\" noOfLines={1}>\n                              Assigned by Tomasz\n                            </Text>\n                            <Text color=\"muted\">1d ago</Text>\n                          </HStack>\n                        </StructuredListCell>\n                      </StructuredListItem>\n                    </StructuredList>\n                  </PopoverBody>\n                  <PopoverArrow />\n                </PopoverContent>\n              </Popover>\n            </NavbarItem>\n            <NavbarItem>\n              <Menu>\n                <MenuButton\n                  as={IconButton}\n                  icon={<LuSettings size=\"1.2em\" />}\n                  isRound\n                  variant=\"ghost\"\n                />\n                <MenuList>\n                  <MenuGroup title=\"beatriz@saas-ui.dev\">\n                    <MenuItem>Profile</MenuItem>\n                    <MenuItem>Settings</MenuItem>\n                    <MenuItem>Help &amp; feedback</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuItem>Log out</MenuItem>\n                </MenuList>\n              </Menu>\n            </NavbarItem>\n            <NavbarItem>\n              {isMobile ? (\n                <IconButton aria-label=\"Create\" variant=\"primary\" isRound>\n                  <LuPlus />\n                </IconButton>\n              ) : (\n                <Button variant=\"primary\">Create</Button>\n              )}\n            </NavbarItem>\n          </NavbarContent>\n        </Navbar>\n      }\n      sidebar={\n        <Sidebar bg=\"gray.50\" _dark={{ bg: 'gray.800' }}>\n          <SidebarToggleButton />\n          {isMobile && (\n            <SidebarSection position=\"absolute\" top=\"2\" right=\"0\" width=\"240px\">\n              <OrganizationMenu />\n            </SidebarSection>\n          )}\n          <SidebarSection flex=\"1\" overflowY=\"auto\" pb=\"8\">\n            <NavGroup>\n              <NavItem href=\"#\" icon={<LuUsers />} isActive>\n                Overview\n              </NavItem>\n              <NavItem href=\"#\" icon={<LuListChecks />}>\n                Tasks\n              </NavItem>\n              <NavItem href=\"#\" icon={<LuLightbulb />}>\n                Insights\n              </NavItem>\n            </NavGroup>\n\n            <NavGroup title=\"Teams\" isCollapsible>\n              <NavItem href=\"#\" icon={<LuContact />}>\n                Sales\n              </NavItem>\n              <NavItem href=\"#\" icon={<LuHeartHandshake />}>\n                Support\n              </NavItem>\n            </NavGroup>\n\n            <NavGroup title=\"Tags\" isCollapsible>\n              {tags.map((tag) => (\n                <NavItem\n                  key={tag.id}\n                  href=\"#\"\n                  my=\"0\"\n                  icon={\n                    <Badge\n                      bg={tag.color || 'gray.500'}\n                      boxSize=\"2\"\n                      borderRadius=\"full\"\n                    />\n                  }\n                >\n                  <Text>{tag.name}</Text>\n                  <Badge\n                    opacity=\"0.6\"\n                    borderRadius=\"full\"\n                    bg=\"none\"\n                    ms=\"auto\"\n                    fontWeight=\"medium\"\n                  >\n                    {tag.count}\n                  </Badge>\n                </NavItem>\n              ))}\n            </NavGroup>\n            <IconButton\n              aria-label=\"Help &amp; Support\"\n              isRound\n              position=\"absolute\"\n              bottom=\"2\"\n              variant=\"outline\"\n              size=\"xs\"\n              bg=\"app-background\"\n              zIndex=\"overlay\"\n            >\n              <span>?</span>\n            </IconButton>\n          </SidebarSection>\n        </Sidebar>\n      }\n    >\n      {props.children}\n    </AppShell>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/sidebar-layouts/sidebar-with-navbar/sidebar-with-navbar.stories.tsx",
      "content": "import * as React from 'react'\n\nimport { Page, PageHeader } from '@saas-ui-pro/react'\nimport type { Meta } from '@storybook/react'\n\nimport { SidebarWithNavbar } from './sidebar-with-navbar.js'\n\nexport default {\n  title: 'Blocks/SidebarLayouts/SidebarWithNavbar',\n} as Meta\n\nexport const Default = () => (\n  <SidebarWithNavbar>\n    <Page>\n      <PageHeader title=\"Overview\"></PageHeader>\n    </Page>\n  </SidebarWithNavbar>\n)\n",
      "type": "registry:story"
    }
  ],
  "canvas": {
    "center": true
  }
}