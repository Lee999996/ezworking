{
  "name": "navbar-tabs",
  "type": "registry:block",
  "version": "1.1.0",
  "private": false,
  "description": "Navbar with tabs.",
  "dependencies": [
    "@chakra-ui/react",
    "@chakra-ui/utils",
    "@saas-ui/react",
    "react-icons"
  ],
  "files": [
    {
      "path": "blocks/stacked-layouts/navbar-tabs/navbar-tabs.tsx",
      "content": "import React, { useEffect, useRef, useState } from 'react'\n\nimport {\n  Avatar,\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  HStack,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  SystemStyleObject,\n  Tab,\n  TabList,\n  TabProps,\n  Tabs,\n} from '@chakra-ui/react'\nimport { SaasUIIcon } from '@saas-ui/assets'\nimport {\n  AppShell,\n  Navbar,\n  NavbarBrand,\n  NavbarContent,\n  PersonaAvatar,\n  SearchInput,\n  useScrollPosition,\n} from '@saas-ui/react'\nimport { FiChevronDown } from 'react-icons/fi'\n\ninterface SubNavProps {\n  scrollRef: React.RefObject<HTMLDivElement>\n  children: React.ReactNode\n}\n\nconst SubNav: React.FC<SubNavProps> = (props) => {\n  const { scrollRef, children } = props\n\n  const [isEnabled, setIsEnabled] = useState(false)\n\n  useEffect(() => {\n    // enable this after the first render, to make sure the scroll position is\n    // correct\n    setIsEnabled(true)\n  }, [])\n\n  const { y } = useScrollPosition({\n    elementRef: scrollRef,\n    isEnabled,\n    callback({ currPos }) {\n      setPosition(currPos.y)\n    },\n  })\n\n  const [position, setPosition] = useState(y)\n  const isScrolling = scrollRef.current && position > 40\n\n  const offset = 2\n\n  return (\n    <HStack\n      position=\"sticky\"\n      top={offset}\n      zIndex=\"sticky\"\n      borderBottomWidth=\"1px\"\n      spacing=\"0\"\n      sx={{\n        '--logo-position': isScrolling ? '0' : '-52px',\n        '--logo-opacity': isScrolling ? '1' : '0',\n        '--menu-gap': isScrolling ? '0' : '-36px',\n      }}\n    >\n      <HStack mt={-offset} spacing=\"0\" px=\"6\" flex=\"1\" bg=\"app-background\">\n        <Box\n          opacity=\"var(--logo-opacity)\"\n          transform=\"translate3d(0, var(--logo-position), 0)\"\n          transition=\"transform 0.2s ease-out, opacity 0.2s\"\n        >\n          <SaasUIIcon height=\"24px\" />\n        </Box>\n        <Tabs\n          size=\"md\"\n          transform=\"translate3d(var(--menu-gap), 0, 0)\"\n          transition=\"transform 0.2s ease-out\"\n        >\n          <TabList pt=\"2\" px=\"1\" borderBottom=\"0\">\n            {children}\n          </TabList>\n        </Tabs>\n      </HStack>\n    </HStack>\n  )\n}\n\nconst tabStyles: SystemStyleObject = {\n  position: 'relative',\n  height: 10,\n  pb: '2',\n  px: '3',\n  color: 'muted',\n  _hover: {\n    color: 'currentColor',\n    _before: {\n      content: '\"\"',\n      position: 'absolute',\n      inset: 0,\n      mb: '1.5',\n      rounded: 'md',\n      bgColor: 'blackAlpha.100',\n      transitionProperty: 'background-color',\n      transitionDuration: 'normal',\n    },\n    _dark: {\n      _before: {\n        bgColor: 'whiteAlpha.200',\n      },\n    },\n  },\n  _active: {\n    bg: 'none',\n  },\n  _selected: {\n    color: 'currentColor',\n    _after: {\n      content: '\"\"',\n      position: 'absolute',\n      bottom: 0,\n      rounded: 'md',\n      bgColor: 'currentColor',\n      width: '70%',\n      height: '2px',\n    },\n  },\n}\n\nconst SubNavItem: React.FC<TabProps> = (props) => {\n  return (\n    <Tab\n      {...props}\n      sx={{\n        ...tabStyles,\n        ...props.sx,\n      }}\n    />\n  )\n}\n\nexport const NavbarTabs: React.FC<React.PropsWithChildren> = (props) => {\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <AppShell\n      ref={scrollRef}\n      variant=\"static\"\n      overflowY=\"auto\"\n      height=\"480px\"\n      bg=\"app-background\"\n      navbar={\n        <>\n          <Navbar>\n            <NavbarContent>\n              <Breadcrumb\n                separator={\n                  <Box as=\"span\" opacity=\"0.4\" mx=\"1\">\n                    /\n                  </Box>\n                }\n              >\n                <BreadcrumbItem>\n                  <NavbarBrand>\n                    <SaasUIIcon height=\"24px\" />\n                  </NavbarBrand>\n                </BreadcrumbItem>\n                <BreadcrumbItem>\n                  <Menu>\n                    <MenuButton\n                      as={Button}\n                      variant=\"ghost\"\n                      px=\"1.5\"\n                      leftIcon={\n                        <Avatar\n                          size=\"xs\"\n                          icon={<></>}\n                          bgGradient=\"linear(to-r, yellow.200, pink.500)\"\n                        />\n                      }\n                      rightIcon={<FiChevronDown />}\n                    >\n                      Acme\n                    </MenuButton>\n                    <MenuList>\n                      <MenuGroup title=\"Workspaces\">\n                        <MenuItem>Acme</MenuItem>\n                      </MenuGroup>\n                      <MenuDivider />\n                      <MenuItem>Create workspace</MenuItem>\n                    </MenuList>\n                  </Menu>\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </NavbarContent>\n            <NavbarContent as=\"div\" justifyContent=\"end\" spacing=\"4\">\n              <Box width=\"180px\">\n                <SearchInput size=\"sm\" />\n              </Box>\n              <Menu>\n                <MenuButton>\n                  <PersonaAvatar\n                    src=\"/showcase-avatar.jpg\"\n                    name=\"Beatriz\"\n                    size=\"xs\"\n                    presence=\"online\"\n                  />\n                </MenuButton>\n                <MenuList>\n                  <MenuGroup title=\"beatriz@saas-ui.dev\">\n                    <MenuItem>Profile</MenuItem>\n                    <MenuItem>Settings</MenuItem>\n                    <MenuItem>Help &amp; feedback</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuItem>Log out</MenuItem>\n                </MenuList>\n              </Menu>\n            </NavbarContent>\n          </Navbar>\n          <SubNav scrollRef={scrollRef}>\n            <SubNavItem>Overview</SubNavItem>\n            <SubNavItem>Activity</SubNavItem>\n            <SubNavItem>Integrations</SubNavItem>\n            <SubNavItem>Usage</SubNavItem>\n            <SubNavItem>Settings</SubNavItem>\n          </SubNav>\n        </>\n      }\n    >\n      {props.children}\n    </AppShell>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/stacked-layouts/navbar-tabs/navbar-tabs.stories.tsx",
      "content": "import * as React from 'react'\n\nimport { Skeleton, SkeletonText, Stack } from '@chakra-ui/react'\nimport { Page, PageBody } from '@saas-ui-pro/react'\nimport type { Meta } from '@storybook/react'\n\nimport { NavbarTabs } from './navbar-tabs.js'\n\nexport default {\n  title: 'Blocks/StackedLayouts/NavbarTabs',\n} as Meta\n\nexport const Default = () => (\n  <NavbarTabs>\n    <Page>\n      <PageBody overflow=\"visible\">\n        <Stack spacing=\"4\" mb=\"14\" pt=\"10\">\n          <Skeleton width=\"100px\" height=\"24px\" speed={0} />\n          <SkeletonText speed={0} />\n        </Stack>\n        <Stack direction=\"row\" spacing=\"8\" mb=\"14\">\n          <Stack spacing=\"4\" flex=\"1\">\n            <Skeleton width=\"100px\" height=\"20px\" speed={0} />\n            <SkeletonText speed={0} />\n          </Stack>\n          <Stack spacing=\"4\" flex=\"1\">\n            <Skeleton width=\"100px\" height=\"20px\" speed={0} />\n            <SkeletonText speed={0} />\n          </Stack>\n        </Stack>\n        <Stack direction=\"row\" spacing=\"8\" mb=\"14\">\n          <Stack spacing=\"4\" flex=\"1\">\n            <Skeleton width=\"100px\" height=\"20px\" speed={0} />\n            <SkeletonText speed={0} />\n          </Stack>\n          <Stack spacing=\"4\" flex=\"1\">\n            <Skeleton width=\"100px\" height=\"20px\" speed={0} />\n            <SkeletonText speed={0} />\n          </Stack>\n        </Stack>\n        <Stack direction=\"row\" spacing=\"8\">\n          <Stack spacing=\"4\" flex=\"1\">\n            <Skeleton width=\"100px\" height=\"20px\" speed={0} />\n            <SkeletonText speed={0} />\n          </Stack>\n          <Stack spacing=\"4\" flex=\"1\">\n            <Skeleton width=\"100px\" height=\"20px\" speed={0} />\n            <SkeletonText speed={0} />\n          </Stack>\n        </Stack>\n      </PageBody>\n    </Page>\n  </NavbarTabs>\n)\n",
      "type": "registry:story"
    }
  ],
  "canvas": {
    "center": true
  }
}