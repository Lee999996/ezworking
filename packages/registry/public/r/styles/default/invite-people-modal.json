{
  "name": "invite-people-modal",
  "type": "registry:block",
  "version": "1.1.0",
  "private": true,
  "description": "A modal for inviting people to a workspace.",
  "dependencies": [
    "@chakra-ui/react",
    "@chakra-ui/utils",
    "@saas-ui/react",
    "react-icons"
  ],
  "files": [
    {
      "path": "blocks/modals/invite-people-modal/invite-people-modal.tsx",
      "content": "import * as React from 'react'\n\nimport {\n  Button,\n  ButtonGroup,\n  FormLabel,\n  HStack,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  ModalProps,\n} from '@chakra-ui/react'\nimport {\n  ArrayFieldAddButton,\n  ArrayFieldContainer,\n  ArrayFieldRemoveButton,\n  ArrayFieldRowContainer,\n  ArrayFieldRowFields,\n  ArrayFieldRows,\n  Form,\n  FormLayout,\n  SubmitButton,\n} from '@saas-ui/react'\nimport { LuPlus, LuX } from 'react-icons/lu'\n\nexport interface InvitePeopleInput {\n  invites: {\n    email: string\n    role: string\n  }[]\n}\n\ninterface InvitePeopleModalProps\n  extends Pick<ModalProps, 'isOpen' | 'onClose'> {\n  isOpen: boolean\n  onSubmit: (data: InvitePeopleInput) => Promise<void>\n}\n\nexport const InvitePeopleModal: React.FC<InvitePeopleModalProps> = (props) => {\n  const { onSubmit, ...modalProps } = props\n\n  const roleOptions = [\n    {\n      value: 'member',\n      label: 'Member',\n    },\n    {\n      value: 'admin',\n      label: 'Admin',\n    },\n  ]\n\n  return (\n    <Modal {...modalProps} size=\"lg\">\n      <ModalOverlay />\n      <ModalContent>\n        <Form\n          onSubmit={onSubmit}\n          defaultValues={{\n            invites: [\n              {\n                email: '',\n                role: 'member',\n              },\n              {\n                email: '',\n                role: 'member',\n              },\n              {\n                email: '',\n                role: 'member',\n              },\n            ],\n          }}\n        >\n          {({ Field }) => (\n            <>\n              <ModalHeader>\n                <Heading fontSize=\"lg\" fontWeight=\"medium\">\n                  Invite people\n                </Heading>\n\n                <ModalCloseButton />\n              </ModalHeader>\n              <ModalBody pb=\"4\">\n                <FormLayout\n                  columns={3}\n                  spacing={1}\n                  templateColumns=\"2fr 1fr\"\n                  me=\"10\"\n                >\n                  <FormLabel>Email</FormLabel>\n                  <FormLabel>Role</FormLabel>\n                </FormLayout>\n                <ArrayFieldContainer\n                  name=\"invites\"\n                  hideLabel\n                  defaultValue={{\n                    email: '',\n                    role: 'member',\n                  }}\n                  keyName=\"key\"\n                  min={2}\n                  max={10}\n                >\n                  <ArrayFieldRows>\n                    {(fields) => (\n                      <>\n                        {fields.map((field, i) => {\n                          return (\n                            <ArrayFieldRowContainer\n                              key={field.key as string}\n                              index={i}\n                            >\n                              <ArrayFieldRowFields\n                                columns={3}\n                                spacing={1}\n                                templateColumns=\"2fr 1fr\"\n                              >\n                                <Field\n                                  name=\"invites.$.email\"\n                                  type=\"email\"\n                                  placeholder=\"Email address\"\n                                />\n                                <Field\n                                  name=\"invites.$.role\"\n                                  type=\"select\"\n                                  options={roleOptions}\n                                />\n                              </ArrayFieldRowFields>\n                              <ArrayFieldRemoveButton\n                                variant=\"ghost\"\n                                alignSelf=\"center\"\n                              >\n                                <LuX />\n                              </ArrayFieldRemoveButton>\n                            </ArrayFieldRowContainer>\n                          )\n                        })}\n                      </>\n                    )}\n                  </ArrayFieldRows>\n                  <HStack>\n                    <ArrayFieldAddButton\n                      variant=\"outline\"\n                      colorScheme=\"primary\"\n                      alignSelf=\"flex-start\"\n                      leftIcon={<LuPlus />}\n                    >\n                      Add another\n                    </ArrayFieldAddButton>\n                  </HStack>\n                </ArrayFieldContainer>\n              </ModalBody>\n              <ModalFooter\n                bg=\"gray.100\"\n                borderBottomRadius=\"md\"\n                _dark={{ bg: 'whiteAlpha.100' }}\n              >\n                <ButtonGroup>\n                  <Button variant=\"ghost\">Cancel</Button>\n                  <SubmitButton>Invite</SubmitButton>\n                </ButtonGroup>\n              </ModalFooter>\n            </>\n          )}\n        </Form>\n      </ModalContent>\n    </Modal>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/modals/invite-people-modal/invite-people-modal.stories.tsx",
      "content": "import * as React from 'react'\n\nimport { Button, useDisclosure } from '@chakra-ui/react'\nimport type { Meta } from '@storybook/react'\n\nimport { InvitePeopleModal } from './invite-people-modal.js'\n\nexport default {\n  title: 'Blocks/Modals/InvitePeopleModal',\n} as Meta\n\nexport const Default = () => {\n  const disclosure = useDisclosure({\n    defaultIsOpen: true,\n  })\n\n  return (\n    <>\n      <Button onClick={disclosure.onOpen}>Invite people</Button>\n      <InvitePeopleModal\n        {...disclosure}\n        onSubmit={async (data) => {\n          console.log(data)\n        }}\n      />\n    </>\n  )\n}\n",
      "type": "registry:story"
    }
  ],
  "canvas": {
    "center": true,
    "height": "500px"
  }
}