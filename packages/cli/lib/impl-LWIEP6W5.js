import{a as d,b as c,c as s,d as f,e as t,f as m,g,h as u,k as w}from"./chunk-UIMRDWOQ.js";import"./chunk-5V5IBQUV.js";import b from"kleur";import O from"path";import R from"prompts";import{z as n}from"zod";import p from"fs-extra";import h from"path";async function y(e){let i={};if(!p.existsSync(e.cwd)||!p.existsSync(h.resolve(e.cwd,"package.json")))return i[d]=!0,{errors:i,config:null};if(!p.existsSync(h.resolve(e.cwd,"components.json")))return i[c]=!0,{errors:i,config:null};try{let r=await f(e.cwd);return{errors:i,config:r}}catch(r){t.debug(r),console.log(r),t.break(),t.error(`An invalid ${s.info("components.json")} file was found at ${s.info(e.cwd)}.
Before you can add components, you must create a valid ${s.info("components.json")} file by running the ${s.info("init")} command.`),t.error(`Learn more at ${s.info("https://saas-ui.dev/docs/components-json")}.`),t.break(),process.exit(1)}}var E=n.object({components:n.array(n.string()).optional(),yes:n.boolean(),overwrite:n.boolean(),cwd:n.string().optional(),all:n.boolean(),path:n.string().optional(),silent:n.boolean(),srcDir:n.boolean().optional()});async function B(e,...i){try{let r=E.parse({...e,components:i??[]}),a={...r,cwd:O.resolve(r.cwd??process.cwd())};a.components?.length||(a.components=await k(a));let o=await y(a),l=o.config;if(o.errors[c]){let{proceed:S}=await R({type:"confirm",name:"proceed",message:`You need to create a ${s.info("components.json")} file to add components. Proceed?`,initial:!0});S||(t.break(),process.exit(1)),l=await w({cwd:a.cwd,yes:!0,force:!0,defaults:!1,skipPreflight:!1,silent:!0,isNewProject:!1})}if(!l)throw new Error(`Failed to read config at ${s.info(a.cwd)}.`);await u(a.components,l,a)}catch(r){t.break(),m(r)}}async function k(e){let i=await g();if(!i)return t.break(),m(new Error("Failed to fetch registry index.")),[];if(e.all)return i.map(o=>o.name);if(e.components?.length)return e.components;let{components:r}=await R({type:"autocompleteMultiselect",name:"components",message:"Which components would you like to add?",hint:"Space to select. A to toggle all. Enter to submit.",instructions:!1,choices:i.filter(o=>o.type==="registry:block").map(o=>({title:`${o.category}/${o.subcategory}/${o.name} ${o.private?b.blue(b.bold("(PRO)")):""}`,value:o.name,selected:e.all?!0:e.components?.includes(o.name)}))});r?.length||(t.warn("No components selected. Exiting."),t.info(""),process.exit(1));let a=n.array(n.string()).safeParse(r);return a.success?a.data:(t.error(""),m(new Error("Something went wrong. Please try again.")),[])}export{B as add,E as addOptionsSchema};
